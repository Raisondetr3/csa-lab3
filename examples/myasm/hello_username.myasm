org 0
user_name_len: word: 0

org 2
line_end: word: 0         ; End-of-line code
stop_input: word: 0       ; Flag to stop input
in: word: 2046            ; Input buffer address
out: word: 2047           ; Output buffer address

question: word: 18, 'What is your name?'
question_addr: word: question

greeting: word: 8, ' Hello, '
greeting_addr: word: greeting

exclamation: word: 1, '!'
exclamation_addr: word: exclamation

print_cnt: word: 0
print_addr: word: 0
print_str: word: 0

org 100
start: load question
       store print_str
       load question_addr
       store print_addr
       jmp print_loop

print_loop: load print_str
            store print_cnt
            loop: load print_addr
                  inc
                  store print_addr
                  load (print_addr)
                  store (out)
                  load print_cnt
                  dec
                  store print_cnt
                  jmz check_next
                  jmp loop

name_print_loop: load print_str
                 store print_cnt
                 name_loop: load print_addr
                       inc
                       store print_addr
                       load (print_addr)
                       store (out)
                       load print_cnt
                       dec
                       store print_cnt
                       load user_name_len
                       dec
                       store user_name_len
                       jmz exclamation_print
                       jmp name_loop

check_next: load stop_input
            jmz enter_name_loop
            jmp name_print

enter_name_loop: load (in)            ; Read character from input buffer
                 cmp line_end         ; Check if it is the end-of-line character
                 jmnz save_symb       ; If not, save the character and continue reading
                 load stop_input      ; If end-of-line, set stop_input flag
                 inc
                 store stop_input
                 jmp greeting_print

save_symb: store tmp
           load user_name_address
           store print_addr
           load tmp
           store (print_addr)
           load user_name_address
           inc
           store user_name_address
           load user_name_len
           inc
           store user_name_len
           jmp enter_name_loop

greeting_print: load greeting
                store print_str
                load greeting_addr
                store print_addr
                jmp print_loop

name_print: load user_name
            store print_str
            load user_name_start
            dec
            store print_addr
            jmp name_print_loop

exclamation_print: load exclamation_addr       ; No loop because there's 1 character
                   inc
                   store exclamation_addr
                   load (exclamation_addr)
                   store (out)
                   jmp end


end: hlt

tmp: word: 0

user_name_start: word: user_name
user_name_address: word: user_name
user_name: word: 0
